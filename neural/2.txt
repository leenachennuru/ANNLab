A = xlsread('A.xls');
C = xlsread('C.xls');
F = xlsread('F.xls');
H = xlsread('H.xls');
I = xlsread('I.xls');
J = xlsread('J.xls');
L = xlsread('L.xls');
O = xlsread('O.xls');
P = xlsread('P.xls');
T = xlsread('T.xls');
U = xlsread('U.xls');
Y = xlsread('Y.xls');

A1 = reshape(A, 1, prod(size(A)))
C1 = reshape(C, 1, prod(size(C)))
F1 = reshape(F, 1, prod(size(F)))
H1 = reshape(H, 1, prod(size(H)))
I1 = reshape(I, 1, prod(size(I)))
J1 = reshape(J, 1, prod(size(J)))
L1 = reshape(L, 1, prod(size(L)))
O1 = reshape(O, 1, prod(size(O)))
P1 = reshape(P, 1, prod(size(P)))
T1 = reshape(T, 1, prod(size(T)))
U1 = reshape(U, 1, prod(size(U)))
Y1 = reshape(Y, 1, prod(size(Y)))

S = [A1;C1;F1;H1;I1;J1;L1;O1;P1;T1;U1;Y1];




flag1 = 0;
while flag1 == 0
m = input ('\n\nPlease enter the number of neurons, m:')
p = input ('Please enter the number of patterns, p:')
[h, k] = size(S);
if (p<=m) && (p==h) && (m==k)
flag1 = 1;
fprintf ('The input is valid. You can proceed.')
else
flag1 = 0;
fprintf ('The input is invalid. Please enter the input values again.')
end
end




W = zeros(k);
for i = 1:h, W = S(i,:)'*S(i,:) + W; i=i+1;
end
[hw,kw] = size(W)
fprintf('\nThe Weight Matrix computed according to the Hebbian Rule is:')
W = W - p*eye(hw)





v = input ('\nPlease enter the Input Matrix, v:')
z1 = reshape(v,4,4);
imwrite(z1,'V.bmp');
for j = 1:2^m
for t=2:(2^m)/m;
for i = 1:m-1
net = W*v';
o = sign(net);
v = v';
v(i,:) = o(i,:)
v = v';




g='Pattern';
d=[1:1:m];
for r = 1: 1: length(d);
e=[g,num2str(d(i)),'.bmp'];

z2 = reshape(v,4,4);
imwrite(z2, e, 'bmp');
end




i = i+1;
end
nik(:,t)=v
if nik(:,t) == nik(:,t-1)
fprintf('The fixed point has been reached.')
break
end
end
break
j = j+1;
end




fprintf('\nThe reached fixed point is:')
v

if v == S(1,:)
fprintf('\nThe reached fixed point is Pattern A.')
else if v == S(2,:)
fprintf('\nThe reached fixed point is pattern C.')
else if v == S(3,:)
fprintf('\nThe reached fixed point is pattern F.')
else if v == S(4,:)
fprintf('\nThe reached fixed point is pattern H.')
else if v == S(5,:)
fprintf('\nThe reached fixed point is pattern I.')
else if v == S(6,:)
fprintf('\nThe reached fixed point is pattern J.')
else if v == S(7,:)
fprintf('\nThe reached fixed point is pattern L.')
else if v == S(8,:)
fprintf('\nThe reached fixed point is pattern O.')
else if v == S(9,:)
fprintf('\nThe reached fixed point is pattern P.')
else if v == S(10,:)
fprintf('\nThe reached fixed point is pattern T.')
else if v == S(11,:)
fprintf('\nThe reached fixed point is pattern U.')
else if v == S(12,:)
fprintf('\nThe reached fixed point is pattern Y.')
else
fprintf('\nThe reached fixed point does not correspond to any of the stored patterns.')
end
end
end

end

end
end
end

end

end
end
end

end















































